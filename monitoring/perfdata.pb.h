// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: perfdata.proto
// Protobuf C++ Version: 5.26.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_perfdata_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_perfdata_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION != 5026001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_perfdata_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_perfdata_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_perfdata_2eproto;
namespace rocksdb {
class Metric;
struct MetricDefaultTypeInternal;
extern MetricDefaultTypeInternal _Metric_default_instance_;
class PerfDataRequest;
struct PerfDataRequestDefaultTypeInternal;
extern PerfDataRequestDefaultTypeInternal _PerfDataRequest_default_instance_;
class PerfDataResponse;
struct PerfDataResponseDefaultTypeInternal;
extern PerfDataResponseDefaultTypeInternal _PerfDataResponse_default_instance_;
}  // namespace rocksdb
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace rocksdb {
enum PerfResponseStatus : int {
  SUCCESS = 0,
  FAILURE = 1,
  SERVER_NOT_REACHABLE = 2,
  PerfResponseStatus_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  PerfResponseStatus_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool PerfResponseStatus_IsValid(int value);
extern const uint32_t PerfResponseStatus_internal_data_[];
constexpr PerfResponseStatus PerfResponseStatus_MIN = static_cast<PerfResponseStatus>(0);
constexpr PerfResponseStatus PerfResponseStatus_MAX = static_cast<PerfResponseStatus>(2);
constexpr int PerfResponseStatus_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
PerfResponseStatus_descriptor();
template <typename T>
const std::string& PerfResponseStatus_Name(T value) {
  static_assert(std::is_same<T, PerfResponseStatus>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to PerfResponseStatus_Name().");
  return PerfResponseStatus_Name(static_cast<PerfResponseStatus>(value));
}
template <>
inline const std::string& PerfResponseStatus_Name(PerfResponseStatus value) {
  return ::google::protobuf::internal::NameOfDenseEnum<PerfResponseStatus_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool PerfResponseStatus_Parse(absl::string_view name, PerfResponseStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PerfResponseStatus>(
      PerfResponseStatus_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class PerfDataResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rocksdb.PerfDataResponse) */ {
 public:
  inline PerfDataResponse() : PerfDataResponse(nullptr) {}
  ~PerfDataResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PerfDataResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline PerfDataResponse(const PerfDataResponse& from) : PerfDataResponse(nullptr, from) {}
  inline PerfDataResponse(PerfDataResponse&& from) noexcept
      : PerfDataResponse(nullptr, std::move(from)) {}
  inline PerfDataResponse& operator=(const PerfDataResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PerfDataResponse& operator=(PerfDataResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PerfDataResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const PerfDataResponse* internal_default_instance() {
    return reinterpret_cast<const PerfDataResponse*>(
        &_PerfDataResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(PerfDataResponse& a, PerfDataResponse& b) { a.Swap(&b); }
  inline void Swap(PerfDataResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PerfDataResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PerfDataResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<PerfDataResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PerfDataResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PerfDataResponse& from) { PerfDataResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PerfDataResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "rocksdb.PerfDataResponse"; }

 protected:
  explicit PerfDataResponse(::google::protobuf::Arena* arena);
  PerfDataResponse(::google::protobuf::Arena* arena, const PerfDataResponse& from);
  PerfDataResponse(::google::protobuf::Arena* arena, PerfDataResponse&& from) noexcept
      : PerfDataResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStatusFieldNumber = 1,
  };
  // .rocksdb.PerfResponseStatus status = 1;
  void clear_status() ;
  ::rocksdb::PerfResponseStatus status() const;
  void set_status(::rocksdb::PerfResponseStatus value);

  private:
  ::rocksdb::PerfResponseStatus _internal_status() const;
  void _internal_set_status(::rocksdb::PerfResponseStatus value);

  public:
  // @@protoc_insertion_point(class_scope:rocksdb.PerfDataResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    int status_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_perfdata_2eproto;
};
// -------------------------------------------------------------------

class Metric final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rocksdb.Metric) */ {
 public:
  inline Metric() : Metric(nullptr) {}
  ~Metric() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Metric(
      ::google::protobuf::internal::ConstantInitialized);

  inline Metric(const Metric& from) : Metric(nullptr, from) {}
  inline Metric(Metric&& from) noexcept
      : Metric(nullptr, std::move(from)) {}
  inline Metric& operator=(const Metric& from) {
    CopyFrom(from);
    return *this;
  }
  inline Metric& operator=(Metric&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Metric& default_instance() {
    return *internal_default_instance();
  }
  static inline const Metric* internal_default_instance() {
    return reinterpret_cast<const Metric*>(
        &_Metric_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Metric& a, Metric& b) { a.Swap(&b); }
  inline void Swap(Metric* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Metric* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Metric* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Metric>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Metric& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Metric& from) { Metric::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Metric* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "rocksdb.Metric"; }

 protected:
  explicit Metric(::google::protobuf::Arena* arena);
  Metric(::google::protobuf::Arena* arena, const Metric& from);
  Metric(::google::protobuf::Arena* arena, Metric&& from) noexcept
      : Metric(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kKeyFieldNumber = 1,
    kValueFieldNumber = 2,
  };
  // string key = 1;
  void clear_key() ;
  const std::string& key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_key(Arg_&& arg, Args_... args);
  std::string* mutable_key();
  PROTOBUF_NODISCARD std::string* release_key();
  void set_allocated_key(std::string* value);

  private:
  const std::string& _internal_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key(
      const std::string& value);
  std::string* _internal_mutable_key();

  public:
  // double value = 2;
  void clear_value() ;
  double value() const;
  void set_value(double value);

  private:
  double _internal_value() const;
  void _internal_set_value(double value);

  public:
  // @@protoc_insertion_point(class_scope:rocksdb.Metric)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      26, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr key_;
    double value_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_perfdata_2eproto;
};
// -------------------------------------------------------------------

class PerfDataRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:rocksdb.PerfDataRequest) */ {
 public:
  inline PerfDataRequest() : PerfDataRequest(nullptr) {}
  ~PerfDataRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PerfDataRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline PerfDataRequest(const PerfDataRequest& from) : PerfDataRequest(nullptr, from) {}
  inline PerfDataRequest(PerfDataRequest&& from) noexcept
      : PerfDataRequest(nullptr, std::move(from)) {}
  inline PerfDataRequest& operator=(const PerfDataRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PerfDataRequest& operator=(PerfDataRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PerfDataRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PerfDataRequest* internal_default_instance() {
    return reinterpret_cast<const PerfDataRequest*>(
        &_PerfDataRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(PerfDataRequest& a, PerfDataRequest& b) { a.Swap(&b); }
  inline void Swap(PerfDataRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PerfDataRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PerfDataRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<PerfDataRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PerfDataRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PerfDataRequest& from) { PerfDataRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PerfDataRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "rocksdb.PerfDataRequest"; }

 protected:
  explicit PerfDataRequest(::google::protobuf::Arena* arena);
  PerfDataRequest(::google::protobuf::Arena* arena, const PerfDataRequest& from);
  PerfDataRequest(::google::protobuf::Arena* arena, PerfDataRequest&& from) noexcept
      : PerfDataRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::MessageLite::ClassData* GetClassData()
      const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const final;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMetricsFieldNumber = 2,
    kTimestampFieldNumber = 1,
  };
  // repeated .rocksdb.Metric metrics = 2;
  int metrics_size() const;
  private:
  int _internal_metrics_size() const;

  public:
  void clear_metrics() ;
  ::rocksdb::Metric* mutable_metrics(int index);
  ::google::protobuf::RepeatedPtrField<::rocksdb::Metric>* mutable_metrics();

  private:
  const ::google::protobuf::RepeatedPtrField<::rocksdb::Metric>& _internal_metrics() const;
  ::google::protobuf::RepeatedPtrField<::rocksdb::Metric>* _internal_mutable_metrics();
  public:
  const ::rocksdb::Metric& metrics(int index) const;
  ::rocksdb::Metric* add_metrics();
  const ::google::protobuf::RepeatedPtrField<::rocksdb::Metric>& metrics() const;
  // double timestamp = 1;
  void clear_timestamp() ;
  double timestamp() const;
  void set_timestamp(double value);

  private:
  double _internal_timestamp() const;
  void _internal_set_timestamp(double value);

  public:
  // @@protoc_insertion_point(class_scope:rocksdb.PerfDataRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::rocksdb::Metric > metrics_;
    double timestamp_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_perfdata_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// PerfDataRequest

// double timestamp = 1;
inline void PerfDataRequest::clear_timestamp() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.timestamp_ = 0;
}
inline double PerfDataRequest::timestamp() const {
  // @@protoc_insertion_point(field_get:rocksdb.PerfDataRequest.timestamp)
  return _internal_timestamp();
}
inline void PerfDataRequest::set_timestamp(double value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:rocksdb.PerfDataRequest.timestamp)
}
inline double PerfDataRequest::_internal_timestamp() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.timestamp_;
}
inline void PerfDataRequest::_internal_set_timestamp(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.timestamp_ = value;
}

// repeated .rocksdb.Metric metrics = 2;
inline int PerfDataRequest::_internal_metrics_size() const {
  return _internal_metrics().size();
}
inline int PerfDataRequest::metrics_size() const {
  return _internal_metrics_size();
}
inline void PerfDataRequest::clear_metrics() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.metrics_.Clear();
}
inline ::rocksdb::Metric* PerfDataRequest::mutable_metrics(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:rocksdb.PerfDataRequest.metrics)
  return _internal_mutable_metrics()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::rocksdb::Metric>* PerfDataRequest::mutable_metrics()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:rocksdb.PerfDataRequest.metrics)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_metrics();
}
inline const ::rocksdb::Metric& PerfDataRequest::metrics(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rocksdb.PerfDataRequest.metrics)
  return _internal_metrics().Get(index);
}
inline ::rocksdb::Metric* PerfDataRequest::add_metrics() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::rocksdb::Metric* _add = _internal_mutable_metrics()->Add();
  // @@protoc_insertion_point(field_add:rocksdb.PerfDataRequest.metrics)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::rocksdb::Metric>& PerfDataRequest::metrics() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:rocksdb.PerfDataRequest.metrics)
  return _internal_metrics();
}
inline const ::google::protobuf::RepeatedPtrField<::rocksdb::Metric>&
PerfDataRequest::_internal_metrics() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.metrics_;
}
inline ::google::protobuf::RepeatedPtrField<::rocksdb::Metric>*
PerfDataRequest::_internal_mutable_metrics() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.metrics_;
}

// -------------------------------------------------------------------

// Metric

// string key = 1;
inline void Metric::clear_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_.ClearToEmpty();
}
inline const std::string& Metric::key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:rocksdb.Metric.key)
  return _internal_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Metric::set_key(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:rocksdb.Metric.key)
}
inline std::string* Metric::mutable_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_key();
  // @@protoc_insertion_point(field_mutable:rocksdb.Metric.key)
  return _s;
}
inline const std::string& Metric::_internal_key() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.key_.Get();
}
inline void Metric::_internal_set_key(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_.Set(value, GetArena());
}
inline std::string* Metric::_internal_mutable_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.key_.Mutable( GetArena());
}
inline std::string* Metric::release_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:rocksdb.Metric.key)
  return _impl_.key_.Release();
}
inline void Metric::set_allocated_key(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.key_.IsDefault()) {
          _impl_.key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:rocksdb.Metric.key)
}

// double value = 2;
inline void Metric::clear_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.value_ = 0;
}
inline double Metric::value() const {
  // @@protoc_insertion_point(field_get:rocksdb.Metric.value)
  return _internal_value();
}
inline void Metric::set_value(double value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:rocksdb.Metric.value)
}
inline double Metric::_internal_value() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.value_;
}
inline void Metric::_internal_set_value(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.value_ = value;
}

// -------------------------------------------------------------------

// PerfDataResponse

// .rocksdb.PerfResponseStatus status = 1;
inline void PerfDataResponse::clear_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.status_ = 0;
}
inline ::rocksdb::PerfResponseStatus PerfDataResponse::status() const {
  // @@protoc_insertion_point(field_get:rocksdb.PerfDataResponse.status)
  return _internal_status();
}
inline void PerfDataResponse::set_status(::rocksdb::PerfResponseStatus value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:rocksdb.PerfDataResponse.status)
}
inline ::rocksdb::PerfResponseStatus PerfDataResponse::_internal_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::rocksdb::PerfResponseStatus>(_impl_.status_);
}
inline void PerfDataResponse::_internal_set_status(::rocksdb::PerfResponseStatus value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.status_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace rocksdb


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::rocksdb::PerfResponseStatus> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::rocksdb::PerfResponseStatus>() {
  return ::rocksdb::PerfResponseStatus_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_perfdata_2eproto_2epb_2eh
