MKDIR  := $(dir $(firstword $(MAKEFILE_LIST)))
MKNAME := $(notdir $(firstword $(MAKEFILE_LIST)))

GITFLAGS = -q --no-verify --allow-empty

WORK_BRANCH   = $(shell git rev-parse --abbrev-ref HEAD)
WORK_INDEX    = $(MKDIR)/.git/index.$(subst /,_,$(WORK_BRANCH))
TRACER_BRANCH = tracer-omnidb

LOCK_DIR = $(MKDIR)/.git/


# prototype: git_soft_checkout(branch)
define git_soft_checkout
	git checkout --detach -q && git reset --soft $(1) -q -- && git checkout $(1) -q --
endef

# prototype: git_commit(msg)
define git_commit
	-$(MAKE) -C $(MKDIR) -f $(MKNAME) .git_commit MSG='$(1)'
endef

.git_commit:
	-@while (test -e .git/index.lock); do sleep 0.1; done;                `# wait for other git instances`
	-@git branch $(TRACER_BRANCH) -q 2>/dev/null || true                  `# create tracer branch if not existent`
	-@cp -a .git/index $(WORK_INDEX)                                      `# backup git index`
	-@$(call git_soft_checkout, $(TRACER_BRANCH))                         `# switch to tracer branch`
	-@git add . -A --ignore-errors                                        `# add files to commit`
	-@(echo "> $(MSG)" && date && uptime) | git commit -F - $(GITFLAGS)   `# generate commit msg and commit`
	-@$(call git_soft_checkout, $(WORK_BRANCH))                           `# switch to work branch`
	-@mv $(WORK_INDEX) .git/index                                         `# restore git index`

.clean_index:
	rm -f $(WORK_INDEX)


commit_all:
	$(call git_commit, "commit all")
